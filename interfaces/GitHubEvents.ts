// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export type GitHubEvents = {
  actor: Actor;
  created_at: string;
  id: string;
  payload: Payload;
  public: boolean;
  repo: Repo;
  type: Type | string;
};

export type Actor = {
  avatar_url: string;
  display_login: string;
  gravatar_id: string;
  id: number;
  login: string;
  url: string;
};

export type Payload = {
  action?: string;
  before?: string;
  comment?: Comment;
  commits?: Commit[];
  description?: string;
  distinct_size?: number;
  head?: string;
  issue?: Issue;
  master_branch?: string;
  push_id?: number;
  pusher_type?: string;
  ref?: Ref;
  ref_type?: string;
  size?: number;
};

export type Comment = {
  author_association: string;
  body: string;
  created_at: string;
  html_url: string;
  id: number;
  issue_url: string;
  node_id: string;
  updated_at: string;
  url: string;
  user: User;
};

export type User = {
  avatar_url: string;
  events_url: string;
  followers_url: string;
  following_url: string;
  gists_url: string;
  gravatar_id: string;
  html_url: string;
  id: number;
  login: string;
  node_id: string;
  organizations_url: string;
  received_events_url: string;
  repos_url: string;
  site_admin: boolean;
  starred_url: string;
  subscriptions_url: string;
  type: string;
  url: string;
};

export type Commit = {
  author: Author;
  distinct: boolean;
  message: string;
  sha: string;
  url: string;
};

export type Author = {
  email: string;
  name: string;
};

export type Issue = {
  assignee: null;
  assignees: any[];
  author_association: string;
  body: string;
  closed_at: null | string;
  comments: number;
  comments_url: string;
  created_at: string;
  events_url: string;
  html_url: string;
  id: number;
  labels: Label[];
  labels_url: string;
  locked: boolean;
  milestone: null;
  node_id: string;
  number: number;
  repository_url: string;
  state: string;
  title: string;
  updated_at: string;
  url: string;
  user: User;
};

export type Label = {
  color: string;
  default: boolean;
  description?: string;
  id: number;
  name: string;
  node_id: string;
  url: string;
};

export enum Ref {
  FeatureNavigation = "feature/navigation",
  RefsHeadsDevelop = "refs/heads/develop",
  RefsHeadsFinal = "refs/heads/final",
  RefsHeadsMaster = "refs/heads/master"
}

export type Repo = {
  id: number;
  name: string;
  url: string;
};

export enum Type {
  CreateEvent = "CreateEvent",
  IssueCommentEvent = "IssueCommentEvent",
  IssuesEvent = "IssuesEvent",
  PushEvent = "PushEvent",
  WatchEvent = "WatchEvent"
}
